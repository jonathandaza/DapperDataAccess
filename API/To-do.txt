1. Filter model response 
	{
		Transation = object,
		Code = HTTP_CODE (200,400,401,500),
		Message = (200=OK, > 400== "Message error")
	}
2. Exception's handle
3. Utitilies Library (in progress)
4. Resource Library
5. Hosting: selfhost or IIS
6. Bring auto-mapper from T9.Agente project
7. Create unit of work pattern
8. Create LoggerFile and LoggerConsole class, which is handled by queues


resorces:
Trx queries and Unit of work: 
	* https://github.com/graciaheys/DapperUnitOfWorkk
	* https://www.youtube.com/watch?v=vje1sCAugDc
Logger and others interesting utilities
	https://www.youtube.com/watch?v=uS0hRJqamfU

A completed project .NET core plus Front-end Angular
	https://www.youtube.com/watch?v=FfTzG-8B5xQ&list=PL_NVFNExoAxclqXo9fLAeP0G2Qp56Fu8C&index=2


InterSystems Developers channel
	https://www.youtube.com/channel/UCPdsARw9vriybylWSjGrd0A

Git
	https://youtu.be/8JJ101D3knE